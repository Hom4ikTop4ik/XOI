plugins {
    id 'java'
    id 'jacoco'
}

group = 'ru.nsu.martynov'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.bouncycastle:bcprov-jdk18on:1.78.1'
    implementation 'org.bouncycastle:bcpkix-jdk18on:1.78.1'

    testImplementation platform('org.junit:junit-bom:5.10.0')
    testImplementation 'org.junit.jupiter:junit-jupiter'
}

test {
    useJUnitPlatform()
}

jacocoTestReport {
    reports {
        xml.required = true
    }
}



task serverJar(type: Jar) {
    group = 'build'
    description = 'Builds server executable JAR'

    archiveBaseName.set('ServerMain')
    archiveVersion.set('')
    destinationDirectory.set(file("$rootDir/out"))

    from sourceSets.main.output

    dependsOn configurations.runtimeClasspath
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }

    // Убираем подписи
    exclude 'META-INF/*.SF'
    exclude 'META-INF/*.DSA'
    exclude 'META-INF/*.RSA'

    duplicatesStrategy = DuplicatesStrategy.EXCLUDE

    manifest {
        attributes(
                'Main-Class': 'ru.nsu.martynov.server.ServerMain'
        )
    }
}

task clientJar(type: Jar) {
    group = 'build'
    description = 'Builds client executable JAR'

    archiveBaseName.set('Client')
    archiveVersion.set('')
    destinationDirectory.set(file("$rootDir/out"))

    from sourceSets.main.output

    dependsOn configurations.runtimeClasspath
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }

    // Убираем подписи
    exclude 'META-INF/*.SF'
    exclude 'META-INF/*.DSA'
    exclude 'META-INF/*.RSA'

    duplicatesStrategy = DuplicatesStrategy.EXCLUDE

    manifest {
        attributes(
                'Main-Class': 'ru.nsu.martynov.client.Client'
        )
    }
}
